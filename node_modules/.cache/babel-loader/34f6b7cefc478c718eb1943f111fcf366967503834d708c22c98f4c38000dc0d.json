{"ast":null,"code":"var _jsxFileName = \"/Users/asandamabuza/Desktop/blog-app/blog-frontend/src/components/CommentSection.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './CommentSection.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommentSection = ({\n  postId\n}) => {\n  _s();\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    // Fetch comments for the specific post\n    fetch(`http://localhost:5002/api/posts/${postId}/comments`).then(response => response.json()).then(data => setComments(data)).catch(error => console.error('Error fetching comments:', error));\n  }, [postId]);\n  const handleCommentSubmit = e => {\n    e.preventDefault();\n\n    // Post the new comment\n    fetch(`http://localhost:5002/api/posts/${postId}/comments`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        text: newComment\n      })\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      setComments(prevComments => [...prevComments, data]);\n      setNewComment('');\n      setMessage('Comment added successfully!');\n    }).catch(error => {\n      setMessage('Failed to add comment');\n      console.error('Error adding comment:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"comment-list\",\n      children: comments.map((comment, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"comment-item\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: comment.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"comment-form\",\n      onSubmit: handleCommentSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: newComment,\n        onChange: e => setNewComment(e.target.value),\n        placeholder: \"Add a comment...\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(CommentSection, \"X0WU4sogruTcrjzcFiJmfGJCB5Y=\");\n_c = CommentSection;\nexport default CommentSection;\nvar _c;\n$RefreshReg$(_c, \"CommentSection\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CommentSection","postId","_s","comments","setComments","newComment","setNewComment","message","setMessage","fetch","then","response","json","data","catch","error","console","handleCommentSubmit","e","preventDefault","method","headers","body","JSON","stringify","text","ok","Error","prevComments","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","comment","index","onSubmit","value","onChange","target","placeholder","required","type","_c","$RefreshReg$"],"sources":["/Users/asandamabuza/Desktop/blog-app/blog-frontend/src/components/CommentSection.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './CommentSection.css';\n\nconst CommentSection = ({ postId }) => {\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  const [message, setMessage] = useState('');\n\n  useEffect(() => {\n    // Fetch comments for the specific post\n    fetch(`http://localhost:5002/api/posts/${postId}/comments`)\n      .then((response) => response.json())\n      .then((data) => setComments(data))\n      .catch((error) => console.error('Error fetching comments:', error));\n  }, [postId]);\n\n  const handleCommentSubmit = (e) => {\n    e.preventDefault();\n\n    // Post the new comment\n    fetch(`http://localhost:5002/api/posts/${postId}/comments`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ text: newComment }),\n    })\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      })\n      .then((data) => {\n        setComments((prevComments) => [...prevComments, data]);\n        setNewComment('');\n        setMessage('Comment added successfully!');\n      })\n      .catch((error) => {\n        setMessage('Failed to add comment');\n        console.error('Error adding comment:', error);\n      });\n  };\n\n  return (\n    <div className=\"comment-section\">\n      <h3>Comments</h3>\n      <ul className=\"comment-list\">\n        {comments.map((comment, index) => (\n          <li key={index} className=\"comment-item\">\n            <p>{comment.text}</p>\n          </li>\n        ))}\n      </ul>\n      <form className=\"comment-form\" onSubmit={handleCommentSubmit}>\n        <textarea\n          value={newComment}\n          onChange={(e) => setNewComment(e.target.value)}\n          placeholder=\"Add a comment...\"\n          required\n        />\n        <button type=\"submit\">Submit</button>\n      </form>\n      {message && <p className=\"message\">{message}</p>}\n    </div>\n  );\n};\n\nexport default CommentSection;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}